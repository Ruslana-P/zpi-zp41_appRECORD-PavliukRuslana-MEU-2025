export const getLab2_10_description = () => (
  <>
    <h3>Висновки</h3>
    <h4>Переваги створення веб-додатків за допомогою таблиці:</h4>
    <ul>
      <li>
        Простота: Легко реалізувати структуру для відображення даних у вигляді
        таблиць.
      </li>
      <li>
        Сумісність: Підтримується усіма браузерами, навіть старими версіями.
      </li>
      <li>
        Управління даними: Чудово підходить для відображення даних у вигляді
        списків або таблиць, коли важлива точна вирівняність.
      </li>
    </ul>

    <h4>Недоліки створення веб-додатків за допомогою таблиці:</h4>
    <ul>
      <li>
        Жорсткість дизайну: Застосування таблиць для створення макетів обмежує
        гнучкість і адаптивність.
      </li>
      <li>
        Неактуальність: Веб-дизайн за допомогою таблиць є застарілим і не
        відповідає сучасним стандартам.
      </li>
      <li>
        Труднощі в адаптивності: Важко налаштувати таблиці для роботи на різних
        розмірах екранів.
      </li>
    </ul>

    <h4>Переваги створення веб-додатків за допомогою плаваючих блоків:</h4>
    <ul>
      <li>
        Гнучкість: Легко реалізувати складні макети з плавними переходами і
        ефектами.
      </li>
      <li>
        Адаптивність: Плавні блоки добре працюють на різних розмірах екранів.
      </li>
      <li>
        Легкість у зміні макету: Можна змінювати положення елементів без
        змінення основної структури сторінки.
      </li>
    </ul>

    <h4>Недоліки створення веб-додатків за допомогою плаваючих блоків:</h4>
    <ul>
      <li>
        Складність: Під час використання плаваючих блоків може виникнути
        труднощі з вирівнюванням та управлінням позиціонуванням.
      </li>
      <li>
        Залежність від контексту: Плаваючі блоки можуть порушувати загальний
        контекст сторінки, якщо їх неправильно розташувати.
      </li>
    </ul>

    <h4>Переваги використання Flexbox:</h4>
    <ul>
      <li>
        Гнучкість та адаптивність: Відмінно підходить для створення адаптивних
        макетів.
      </li>
      <li>
        Зручність у вирівнюванні: Легко вирівнювати елементи як по горизонталі,
        так і по вертикалі.
      </li>
      <li>
        Мінімум коду: Flexbox дозволяє створювати складні макети за допомогою
        мінімуму CSS-правил.
      </li>
    </ul>

    <h4>Недоліки використання Flexbox:</h4>
    <ul>
      <li>
        Не підтримується старими браузерами: Деякі старі версії браузерів можуть
        не підтримувати Flexbox або мати проблеми з його реалізацією.
      </li>
      <li>
        Непередбачуваність: Для новачків Flexbox може здатися складним через
        велику кількість параметрів і опц
      </li>
    </ul>

    <p>
      В цілому, для сучасних веб-додатків Flexbox є кращим вибором завдяки своїй
      гнучкості та адаптивності, тоді як таблиці застаріли, а плаваючі блоки
      можуть бути корисні, але потребують додаткових зусиль для управління.
    </p>
  </>
);
